// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Package extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'pulumi-package:index:Package';

    /**
     * Returns true if the given object is an instance of Package.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Package {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Package.__pulumiType;
    }

    /**
     * Language of the pulumi package (typescript, go, c#, python).
     */
    public /*out*/ readonly releases!: pulumi.Output<string[] | undefined>;

    /**
     * Create a Package resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PackageArgs, opts?: pulumi.ComponentResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["language"] = args ? args.language : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["serverBucketName"] = args ? args.serverBucketName : undefined;
            inputs["serverBucketWebsiteEndpoint"] = args ? args.serverBucketWebsiteEndpoint : undefined;
            inputs["releases"] = undefined /*out*/;
        } else {
            inputs["releases"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Package.__pulumiType, name, inputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Package resource.
 */
export interface PackageArgs {
    /**
     * Language of the pulumi package (typescript, go, c#, python).
     */
    readonly language?: string;
    /**
     * Name of the pulumi package
     */
    readonly name?: string;
    /**
     * Name s3 bucket for plugin publication.
     */
    readonly serverBucketName?: pulumi.Input<string>;
    /**
     * Website endpoint for s3 plugin server
     */
    readonly serverBucketWebsiteEndpoint?: pulumi.Input<string>;
}
